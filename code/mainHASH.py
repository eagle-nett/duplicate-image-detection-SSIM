import os
import shutil
from PIL import Image
import imagehash

# Th∆∞ m·ª•c ch·ª©a ·∫£nh g·ªëc
SOURCE_DIR = r"E:\no"
# Th∆∞ m·ª•c ƒë·ªÉ l∆∞u ·∫£nh nghi l√† tr√πng
DUPLICATE_DIR = r"E:\duplicate"
# Th∆∞ m·ª•c ƒë·ªÉ l∆∞u ·∫£nh kh√¥ng tr√πng
NON_DUPLICATE_DIR = r"E:\non duplicate"
# Ng∆∞·ª°ng hash ƒë·ªÉ xem l√† tr√πng (0 = gi·ªëng h·ªát, 5-10 = kh√° gi·ªëng)
HASH_THRESHOLD = 5

# T·∫°o th∆∞ m·ª•c l∆∞u ·∫£nh tr√πng v√† kh√¥ng tr√πng n·∫øu ch∆∞a c√≥
os.makedirs(DUPLICATE_DIR, exist_ok=True)
os.makedirs(NON_DUPLICATE_DIR, exist_ok=True)

# D·∫°ng ·∫£nh h·ªó tr·ª£
SUPPORTED = ('.jpg', '.jpeg', '.png', '.bmp', '.webp')

hash_dict = {}
duplicates = 0
non_duplicates = 0

for file in os.listdir(SOURCE_DIR):
    if not file.lower().endswith(SUPPORTED):
        continue

    path = os.path.join(SOURCE_DIR, file)

    try:
        img = Image.open(path)
        img_hash = imagehash.phash(img)

        # Ki·ªÉm tra ·∫£nh ƒë√£ c√≥ hash tr√πng ch∆∞a
        is_duplicate = False
        for existing_path, existing_hash in hash_dict.items():
            if abs(img_hash - existing_hash) <= HASH_THRESHOLD:
                print(f"üîÅ Tr√πng: {file} gi·ªëng v·ªõi {os.path.basename(existing_path)}")
                shutil.copy2(path, os.path.join(DUPLICATE_DIR, file))
                duplicates += 1
                is_duplicate = True
                break

        # N·∫øu kh√¥ng tr√πng, l∆∞u v√†o th∆∞ m·ª•c non-duplicate
        if not is_duplicate:
            print(f"‚úÖ Kh√¥ng tr√πng: {file}")
            shutil.copy2(path, os.path.join(NON_DUPLICATE_DIR, file))
            non_duplicates += 1
            hash_dict[path] = img_hash

    except Exception as e:
        print(f"L·ªói khi x·ª≠ l√Ω {file}: {e}")

print(f"\n‚úÖ Ho√†n t·∫•t. T√¨m th·∫•y {duplicates} ·∫£nh tr√πng/na n√° v√† {non_duplicates} ·∫£nh kh√¥ng tr√πng.")
